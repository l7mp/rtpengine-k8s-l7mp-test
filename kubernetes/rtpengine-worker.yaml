apiVersion: v1
kind: ConfigMap
metadata:
  name: l7mp-worker-config
data:
  l7mp-worker.yaml: |
    # Controller listening on 1234, plus some useful debug clusters
    admin:
      log_level: info
      log_file: stdout
      access_log_path: /tmp/admin_access.log
    listeners:
      - name: controller-listener
        spec: { protocol: HTTP, port: 1234 }
        rules:
          - action:
              route:
                destination:
                  spec: { protocol: L7mpController }
      - name: media-worker-listener
        spec:
          protocol: JSONSocket
          transport: { protocol: UDP, port: 19000 }
        rules: media-worker-rulelist
        options:
          track: 3600 # 1 hour
      # - name: rtpengine-listener
      #   spec:
      #     protocol: UDP
      #     transport: { protocol: UDP, port: 22222 }
      #   rules:
      #     - action:
      #         route:
      #           destination:
      #             spec:
      #               protocol: UDP
      #               port: 22222
      #             endpoints:
      #               - { spec: { address: "127.0.0.1" } }
    rulelists:
      - name: media-worker-rulelist
        rules: []
    clusters:
      - name: ingress-metric-counter
        spec: { protocol: Metric }
      - name: egress-metric-counter
        spec: { protocol: Metric }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: rtpengine-config
  namespace: default
data:
  rtpengine.conf: |
    [rtpengine]
    # access only via the sidecar proxy
    # listen-ng=MY_IP:22222
    # interface=MY_IP
    listen-ng=127.0.0.1:22222
    interface=lo

    foreground=true
    log-stderr=true

    port-min=10000
    port-max=20000

    recording-dir=/tmp
    recording-method=pcap
    recording-format=eth

    log-level=7
    delete-delay=0

    # redis = 127.0.0.1:6379/5
    # redis-write = password@12.23.34.45:6379/42
    # redis-num-threads = 8
    # no-redis-required = false
    # redis-expires = 86400
    # redis-allowed-errors = -1
    # redis-disable-time = 10
    # redis-cmd-timeout = 0
    # redis-connect-timeout = 1000

    # sip-source = false
    # dtls-passive = false

---

# worker
apiVersion: apps/v1
kind: Deployment
metadata:
  name: l7mp-worker
  labels:
    app: l7mp-worker
spec:
  # replicas: 2
  replicas: 1
  selector:
    matchLabels:
      app: l7mp-worker
  template:
    metadata:
      labels:
        app: l7mp-worker
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      volumes:
        - name: l7mp-config-volume
          configMap:
            name: l7mp-worker-config
        - name: rtpengine-config-volume
          configMap:
            name: rtpengine-config
        - name: kernel-debug
          hostPath:
            path: /sys/kernel/debug
            type: Directory
      containers:
      # sidecar
      - name: l7mp
        image: l7mp/l7mp:latest
        imagePullPolicy: IfNotPresent
        # command: ["/bin/sh"]
        # args: ["-c", "while true; do echo hello; sleep 10;done"]
        command: [ "node" ]
        args: [ "l7mp-proxy.js", "-c", "config/l7mp-worker.yaml", "-s", "-l", "info" ]
        ports:
        - containerPort: 1234
        volumeMounts:
          - name: l7mp-config-volume
            mountPath: /app/config
      - name: rtpengine
        image: drachtio/rtpengine
        imagePullPolicy: IfNotPresent
        # command: ["/bin/sh"]
        # args: ["-c", "while true; do echo hello; sleep 10;done"]
        command: [ "/usr/local/bin/rtpengine" ]
        args: [ "--config-file=/etc/rtpengine/rtpengine.conf", "-i", "lo", "-f", "-L", "7", "-E" ]
        volumeMounts:
          - name: rtpengine-config-volume
            mountPath: /etc/rtpengine

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: l7mp-worker
  name: l7mp-worker
spec:
  ports:
  - port: 1234
    name: http-control-port
    protocol: TCP
    targetPort: 1234
  - port: 19000
    name: worker-rtp-service-port
    protocol: UDP
    targetPort: 19000
  - port: 19001
    name: worker-rtcp-service-port
    protocol: UDP
    targetPort: 19001
  - port: 22222
    name: udp-rtpengine-ng-port
    protocol: UDP
    targetPort: 22222
  selector:
    app: l7mp-worker
  type: ClusterIP

---

# rtpengine-ng

apiVersion: l7mp.io/v1
kind: VirtualService
metadata:
  name: udp-ingress-rtpengine-ng
spec:
  selector:
    matchLabels:
      app: l7mp-ingress
  listener:
    spec:
      UDP:
        port: 22222
    rules:
      - action:
          route:
            destinationRef: /apis/l7mp.io/v1/namespaces/default/targets/udp-ingress-rtpengine-ng-target

---

apiVersion: l7mp.io/v1
kind: Target
metadata:
  name: udp-ingress-rtpengine-ng-target
spec:
  selector:
    matchLabels:
      app: l7mp-ingress
  cluster:
    spec: 
      UDP:
        port: 22222
    endpoints:
      - selector:
          matchLabels:
            app: l7mp-worker

---

apiVersion: l7mp.io/v1
kind: VirtualService
metadata:
  name: udp-worker-rtpengine-ng
spec:
  selector:
    matchLabels:
      app: l7mp-worker
  listener:
    spec:
      UDP:
        port: 22222
    rules:
      - action:
          route:
            destinationRef: /apis/l7mp.io/v1/namespaces/default/targets/udp-worker-rtpengine-ng-target

---

apiVersion: l7mp.io/v1
kind: Target
metadata:
  name: udp-worker-rtpengine-ng-target
spec:
  selector:
    matchLabels:
      app: l7mp-worker
  cluster:
    spec: 
      UDP:
        port: 22222
    endpoints:
      - { spec: { address: "127.0.0.1" } }

